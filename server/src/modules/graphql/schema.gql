# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddCityInput {
  forecastDaysAmount: Int!
  name: String!
}

input Credentials {
  email: String!
  password: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeleteCityInput {
  name: String!
}

type Message {
  message: String!
}

type Mutation {
  addWeatherSubscription(input: AddCityInput!): Subscription!
  deleteWeatherSubscription(input: DeleteCityInput!): Subscription!
  refreshAccess: Message!
  signIn(input: Credentials!): UserPayload!
  signOut: Message!
  signUp(input: Credentials!): UserPayload!
}

type PaginatedWeatherForecast {
  edges: [WeatherForecast!]!
  paginationInfo: PaginationInfo!
}

type PaginationInfo {
  totalCount: Int!
}

type Query {
  citiesByPrefix(limit: Int!, minPopulation: Int!, offset: Int!, prefix: String!, sort: String!): [SearchedCity!]!
  citySearchStatus: Boolean!
  currentUser: UserPayload
  userCitiesWeather(forecastDaysAmount: Int!, limit: Int!, offset: Int!, order: String!): PaginatedWeatherForecast!
}

type SearchedCity {
  country: String!
  name: String!
}

type Subscription {
  cityId: String!
  createdAt: DateTime!
  id: String!
  userId: String!
}

type UserPayload {
  email: String!
}

type WeatherDay {
  celsius: Float!
  dayOfWeek: String!
  fahrenheit: Float!
  humidity: Int!
  id: ID!
  maxCelsius: Float!
  maxFahrenheit: Float!
  minCelsius: Float!
  minFahrenheit: Float!
  precip: Float!
  text: String!
  windSpeed: Float!
}

type WeatherForecast {
  celsius: Float!
  city: String!
  daysForecast: [WeatherDay!]!
  fahrenheit: Float!
  humidity: Int!
  id: ID!
  precip: Float!
  text: String!
  time: String!
  windSpeed: Float!
}